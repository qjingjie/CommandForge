<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <!--Windows Title-->
    <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource Gray-700}" />
        <Setter Property="Background" Value="{StaticResource DefaultBgColor}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Normal">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CornerRadius" Value="11" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="CornerRadius" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitleBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Gray-50}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="ContentPresenter" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Gray-700}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Orange-700}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarExitButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Gray-50}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="ContentPresenter" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Gray-700}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="DarkRed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Normal">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0 10 0 0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Buttons-->
    <Style x:Key="DefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{StaticResource Gray-700}" />
        <Setter Property="MinWidth" Value="64" />
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="FontSize" Value="{StaticResource Heading2}" />
        <Setter Property="Foreground" Value="{StaticResource Gray-50}" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="5" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Amber-700}" />
                <Setter Property="Foreground" Value="{StaticResource Gray-900}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Orange-700}" />
                <Setter Property="Foreground" Value="{StaticResource Gray-900}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource Gray-900}" />
                <Setter Property="Opacity" Value="0.38" />
                <Setter Property="Foreground" Value="{StaticResource DisabledFontColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Textbox-->
    <Style x:Key="DefaultTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{StaticResource TextBoxBgColor}" />
        <Setter Property="Foreground" Value="{StaticResource Gray-50}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Amber-700}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Gray-50}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledFontColor}" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource StateError}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ScrollBar (Default)-->
    <!--Repeat Buttons (The part in the middle, not the thumb, but the long area between the buttons)-->
    <Style x:Key="DefaultScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{StaticResource DefaultBgColor}" Margin="0 2 0 0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollBar Thumb (The part that can be dragged up / down or left / right-->
    <Style x:Key='DefaultScrollBarThumb' TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{StaticResource Gray-700}" Margin="1 2 1 0" CornerRadius="5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultHScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Background" Value="{StaticResource DefaultBgColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource DefaultScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource DefaultScrollBarThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource DefaultScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultVScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Background" Value="{StaticResource DefaultBgColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource DefaultScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource DefaultScrollBarThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource DefaultScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DefaultScollViewer" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Grid.Row="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" CanHorizontallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" CanVerticallyScroll="False" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" />
            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" Style="{StaticResource DefaultVScrollBar}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Style="{StaticResource DefaultHScrollBar}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
        </Grid>
    </ControlTemplate>

    <!--Control Templates-->
    <ControlTemplate x:Key="ValidationTemplate">
        <StackPanel>
            <AdornedElementPlaceholder x:Name="ControlWithError" />
            <materialDesign:PackIcon Kind="AlertCircle" Foreground="{StaticResource StateError}" Width="20" Height="20" HorizontalAlignment="Right" Margin="0 -50 10 0" VerticalAlignment="Center" />
        </StackPanel>
    </ControlTemplate>
</ResourceDictionary>