<UserControl x:Class="CommandForge.Views.ZmqCommunicationsView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:validators="clr-namespace:CommandForge.Utilities.ValidationRules" xmlns:enums="clr-namespace:CommandForge.Enums" mc:Ignorable="d" FontFamily="{StaticResource RobotoCondensed}">
    <StackPanel>
        <!--Subscriber-->
        <materialDesign:Card Background="{StaticResource AlternateBgColor}" UniformCornerRadius="10" HorizontalAlignment="Stretch">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Height="35" BorderBrush="{StaticResource Orange-700}" BorderThickness="0 0 0 2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!--Header-->
                        <TextBlock Grid.Column="0" Text="ZeroMQ - Subscriber" FontFamily="{StaticResource RobotoCondensedBold}" FontSize="{StaticResource Heading1}" Foreground="{StaticResource Gray-50}" VerticalAlignment="Center" />

                        <!--Status-->
                        <Border Grid.Column="1" Width="150" Height="30" Background="{StaticResource BaseBgColor}" CornerRadius="5" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 0 5">
                            <TextBlock Text="{Binding SubscriberStatus}" FontSize="{StaticResource Heading2}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                                <Setter Property="Foreground" Value="{StaticResource Gray-400}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                                <Setter Property="Foreground" Value="{StaticResource StateOk}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                                <Setter Property="Foreground" Value="{StaticResource StateOk}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                                <Setter Property="Foreground" Value="{StaticResource StateError}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Border>
                    </Grid>
                </Border>

                <Grid Grid.Row="1" Margin="0 10 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="5" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--IP Address-->
                    <StackPanel Grid.Column="0" Grid.Row="0">
                        <TextBlock Text="IP Address" Foreground="{StaticResource Gray-400}" FontSize="{StaticResource Heading2}" Margin="5 0 0 2" />
                        <TextBox Validation.ErrorTemplate="{StaticResource ValidationTemplate}" FontSize="{StaticResource Heading2}" HorizontalAlignment="Stretch">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsReadOnly" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Cursor" Value="Arrow" />
                                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Cursor" Value="Arrow" />
                                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsReadOnly" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                            <TextBox.Text>
                                <Binding Path="SubscriberIpv4" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:Ipv4Rule ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <!--Port-->
                    <StackPanel Grid.Column="2" Grid.Row="0">
                        <TextBlock Text="Port" Foreground="{StaticResource Gray-400}" FontSize="{StaticResource Heading2}" Margin="5 0 0 2" />
                        <TextBox Validation.ErrorTemplate="{StaticResource ValidationTemplate}" FontSize="{StaticResource Heading2}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsReadOnly" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Cursor" Value="Arrow" />
                                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Cursor" Value="Arrow" />
                                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsReadOnly" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                            <TextBox.Text>
                                <Binding Path="SubscriberPort" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:PortRule ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <!--Control Set 1-->
                    <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal">
                        <Button Content="Connect" Command="{Binding SubscriberConfigurationCommand}" CommandParameter="connect" Margin="0 0 5 0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="Disconnect" Command="{Binding SubscriberConfigurationCommand}" CommandParameter="disconnect">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>

                    <!--Control Set 2-->
                    <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Horizontal">
                        <Button Content="Bind" Command="{Binding SubscriberConfigurationCommand}" CommandParameter="bind" Margin="0 0 5 0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="Unbind" Command="{Binding SubscriberConfigurationCommand}" CommandParameter="unbind">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SubscriberStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </materialDesign:Card>

        <!--Publisher-->
        <materialDesign:Card Background="{StaticResource AlternateBgColor}" UniformCornerRadius="10" HorizontalAlignment="Stretch" Margin="0 10 0 0">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Height="35" BorderBrush="{StaticResource Orange-700}" BorderThickness="0 0 0 2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!--Header-->
                        <TextBlock Grid.Column="0" Text="ZeroMQ - Publisher" FontFamily="{StaticResource RobotoCondensedBold}" FontSize="{StaticResource Heading1}" Foreground="{StaticResource Gray-50}" VerticalAlignment="Center" />

                        <!--Status-->
                        <Border Grid.Column="1" Width="150" Height="30" Background="{StaticResource BaseBgColor}" CornerRadius="5" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 0 5">
                            <TextBlock Text="{Binding PublisherStatus}" FontSize="{StaticResource Heading2}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                                <Setter Property="Foreground" Value="{StaticResource Gray-400}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                                <Setter Property="Foreground" Value="{StaticResource StateOk}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                                <Setter Property="Foreground" Value="{StaticResource StateOk}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                                <Setter Property="Foreground" Value="{StaticResource StateError}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Border>
                    </Grid>
                </Border>

                <Grid Grid.Row="1" Margin="0 10 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="5" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--IP Address-->
                    <StackPanel Grid.Column="0" Grid.Row="0">
                        <TextBlock Text="IP Address" Foreground="{StaticResource Gray-400}" FontSize="{StaticResource Heading2}" Margin="5 0 0 2" />
                        <TextBox Validation.ErrorTemplate="{StaticResource ValidationTemplate}" FontSize="{StaticResource Heading2}" HorizontalAlignment="Stretch">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsReadOnly" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Cursor" Value="Arrow" />
                                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Cursor" Value="Arrow" />
                                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsReadOnly" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                            <TextBox.Text>
                                <Binding Path="PublisherIpv4" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:Ipv4Rule ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <!--Port-->
                    <StackPanel Grid.Column="2" Grid.Row="0">
                        <TextBlock Text="Port" Foreground="{StaticResource Gray-400}" FontSize="{StaticResource Heading2}" Margin="5 0 0 2" />
                        <TextBox Validation.ErrorTemplate="{StaticResource ValidationTemplate}" FontSize="{StaticResource Heading2}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsReadOnly" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Cursor" Value="Arrow" />
                                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Cursor" Value="Arrow" />
                                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsReadOnly" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                            <TextBox.Text>
                                <Binding Path="PublisherPort" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:PortRule ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <!--Control Set 1-->
                    <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal">
                        <Button Content="Connect" Command="{Binding PublisherConfigurationCommand}" CommandParameter="connect" Margin="0 0 5 0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="Disconnect" Command="{Binding PublisherConfigurationCommand}" CommandParameter="disconnect">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>

                    <!--Control Set 2-->
                    <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Horizontal">
                        <Button Content="Bind" Command="{Binding PublisherConfigurationCommand}" CommandParameter="bind" Margin="0 0 5 0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="Unbind" Command="{Binding PublisherConfigurationCommand}" CommandParameter="unbind">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.OFF}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.CONNECTED}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.BOUND}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PublisherStatus}" Value="{x:Static enums:ZmqStatus.ERROR}">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </materialDesign:Card>
    </StackPanel>
</UserControl>